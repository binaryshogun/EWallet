<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:EWallet.Converters">

    <!--#region Brushes-->
    <SolidColorBrush
        x:Key="MainColor"
        Color="#FFB32BF9" />
    <SolidColorBrush
        x:Key="Accents"
        Color="#773997" />
    <SolidColorBrush
        x:Key="ForegroundColor"
        Color="Black" />
    <SolidColorBrush
        x:Key="BackgroundColor"
        Color="White" />
    <SolidColorBrush
        x:Key="PlaceholdersColor"
        Color="Gray" />
    <SolidColorBrush
        x:Key="LoaderColor"
        Color="Black" />
    <!--#endregion-->

    <!--#region Converters-->
    <BooleanToVisibilityConverter
        x:Key="BooleanToVisibilityConverter" />
    <converters:InversedBooleanToVisibilityConverter
        x:Key="InversedConverter" />
    <!--#endregion-->

    <!--#region Animation storyboards (scales X and Y)-->
    <Storyboard x:Key="mouseEnteredButton">
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleX"
            To="1.05"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleY"
            To="1.05"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="mouseLeftButton">
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleX"
            To="1.0"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleY"
            To="1.0"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <!--#endregion-->

    <!--#region Common styles-->
    <!--TextBox style-->
    <Style TargetType="{x:Type TextBox}">
        <Setter
            Property="Margin"
            Value="10" />
        <Setter
            Property="Padding"
            Value="5" />
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <Setter
            Property="BorderThickness"
            Value="0 0 0 1" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ForegroundColor}" />
        <Setter
            Property="Background"
            Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="KeyboardNavigation.TabNavigation"
            Value="None" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Left" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="AllowDrop"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type TextBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Opacity"
                                TargetName="border"
                                Value="0.56" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource MainColor}" />
                        </Trigger>
                        <Trigger
                            Property="IsKeyboardFocused"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Accents}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsInactiveSelectionHighlightEnabled"
                        Value="true" />
                    <Condition
                        Property="IsSelectionActive"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="SelectionBrush"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--PasswordBox style-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter
            Property="BorderThickness"
            Value="0 0 0 1" />
        <Setter
            Property="VerticalAlignment"
            Value="Center" />
        <Setter
            Property="PasswordChar"
            Value="●" />
        <Setter
            Property="Background"
            Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource ForegroundColor}" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter
            Property="KeyboardNavigation.TabNavigation"
            Value="None" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Left" />
        <Setter
            Property="FocusVisualStyle"
            Value="{x:Null}" />
        <Setter
            Property="AllowDrop"
            Value="true" />
        <Setter
            Property="ScrollViewer.PanningMode"
            Value="VerticalFirst" />
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="False" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type PasswordBox}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                Property="Opacity"
                                TargetName="border"
                                Value="0.56" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource MainColor}" />
                        </Trigger>
                        <Trigger
                            Property="IsKeyboardFocused"
                            Value="true">
                            <Setter
                                Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Accents}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsInactiveSelectionHighlightEnabled"
                        Value="true" />
                    <Condition
                        Property="IsSelectionActive"
                        Value="false" />
                </MultiTrigger.Conditions>
                <Setter
                    Property="SelectionBrush"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--TextBlock style-->
    <Style TargetType="{x:Type TextBlock}">
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="Padding"
            Value="3" />
        <Setter
            Property="TextWrapping"
            Value="WrapWithOverflow" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    
    <!--Label style-->
    <Style TargetType="Label">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <Setter
            Property="Padding"
            Value="5" />
        <Setter
            Property="Margin"
            Value="10" />
    </Style>

    <!--Button style-->
    <Style TargetType="{x:Type Button}">
        <Setter
            Property="MinWidth"
            Value="200" />
        <Setter
            Property="MinHeight"
            Value="30" />
        <Setter
            Property="Background"
            Value="{StaticResource BackgroundColor}" />
        <Setter
            Property="Foreground"
            Value="{StaticResource ForegroundColor}" />
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="30 15" />
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource Accents}" />
        <Setter
            Property="BorderThickness"
            Value="1.5" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="10"
                        Padding="{TemplateBinding Padding}"
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        RenderTransformOrigin="0.5, 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform
                                x:Name="itemScaleTransform" />
                        </Border.RenderTransform>
                        <ContentPresenter
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Cursor"
                                Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard
                                    Storyboard="{StaticResource mouseEnteredButton}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard
                                    Storyboard="{StaticResource mouseLeftButton}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>