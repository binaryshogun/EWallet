<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:EWallet.Components"
    xmlns:controls="clr-namespace:EWallet.Controls"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!--#region Animation storyboards-->
    <Storyboard x:Key="mouseEnteredButton">
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleX"
            To="1.05"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleY"
            To="1.05"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="mouseLeftButton">
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleX"
            To="1.0"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation
            Storyboard.TargetName="itemScaleTransform"
            Storyboard.TargetProperty="ScaleY"
            To="1.0"
            Duration="00:00:00.4">
            <DoubleAnimation.EasingFunction>
                <QuarticEase />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <!--#endregion-->

    <!--#region Modal style-->
    <Style TargetType="{x:Type components:Modal}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type components:Modal}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter
                            x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid
                        Background="{TemplateBinding Background}"
                        Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            MinHeight="400"
                            MinWidth="600"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush
                                        Visual="{Binding ElementName=border}" />
                                </Grid.OpacityMask>
                                <Border
                                    x:Name="border"
                                    Background="White"
                                    CornerRadius="5" />
                                <ContentControl
                                    Content="{TemplateBinding Content}" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="10"
                                    Color="Gray" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region PasswordBox style-->
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#000"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFB32BF9"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#773997"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region TextBox style-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="#000"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFB32BF9"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#773997"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region Different styles for buttons-->
    <Style x:Key="WhiteButtonStyle" TargetType="{x:Type Button}">
        <Setter
            Property="Background"
            Value="White" />
        <Setter
            Property="Foreground"
            Value="Black" />
        <Setter
            Property="Margin"
            Value="5" />
        <Setter
            Property="Padding"
            Value="2 15" />
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="FontSize"
            Value="20" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <Setter
            Property="BorderBrush"
            Value="#773997" />
        <Setter
            Property="BorderThickness"
            Value="1.5" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        CornerRadius="10"
                        Padding="{TemplateBinding Padding}"
                        Margin="{TemplateBinding Margin}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        RenderTransformOrigin="0.5, 0.5">
                        <Border.RenderTransform>
                            <ScaleTransform
                                x:Name="itemScaleTransform" />
                        </Border.RenderTransform>

                        <ContentPresenter 
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Cursor"
                                Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource mouseEnteredButton}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource mouseLeftButton}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="PurpleButtonStyle"
        TargetType="{x:Type Button}"
        BasedOn="{StaticResource WhiteButtonStyle}">
        <Setter
            Property="Background"
            Value="#773997" />
        <Setter
            Property="Foreground"
            Value="White" />
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource WhiteButtonStyle}">
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="MinHeight" Value="50"/>
    </Style>
    
    <Style TargetType="Button" x:Key="SmallButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#000" />
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="10 0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <TextBlock
                        Text="{TemplateBinding Content}"
                        RenderTransformOrigin="0.5, 0.5">

                        <TextBlock.RenderTransform>
                            <ScaleTransform
                                x:Name="itemScaleTransform" />
                        </TextBlock.RenderTransform>

                    </TextBlock>

                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Cursor"
                                Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard
                                    Storyboard="{StaticResource mouseEnteredButton}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard
                                    Storyboard="{StaticResource mouseLeftButton}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ImageButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="MaxHeight" Value="30"/>
        <Setter
            Property="Margin"
            Value="10" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="2"
                        RenderTransformOrigin="0.5, 0.5">

                        <Border.RenderTransform>
                            <ScaleTransform x:Name="itemScaleTransform"/>
                        </Border.RenderTransform>
                        
                        <ContentPresenter
                            x:Name="ButtonPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                Property="Cursor"
                                Value="Hand" />
                            <Trigger.EnterActions>
                                <BeginStoryboard
                                    Storyboard="{StaticResource mouseEnteredButton}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard
                                    Storyboard="{StaticResource mouseLeftButton}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--TextBlock style-->
    <Style
        TargetType="{x:Type TextBlock}">
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="Padding"
            Value="3" />
        <Setter
            Property="TextWrapping"
            Value="WrapWithOverflow" />
        <Setter
            Property="HorizontalAlignment"
            Value="Center" />
    </Style>
    
    <!--Label style-->
    <Style
        TargetType="Label">
        <Setter
            Property="FontSize"
            Value="24" />
        <Setter
            Property="FontFamily"
            Value="Cascadia Mono" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <Setter
            Property="Padding"
            Value="5" />
        <Setter
            Property="Margin"
            Value="10" />
    </Style>

    <!--BindablePasswordBox (custom component) style-->
    <Style TargetType="{x:Type controls:BindablePasswordBox}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontFamily" Value="Cascadia Mono"/>
        <Setter Property="FontWeight" Value="Light"/>
    </Style>

    <Style
        TargetType="{x:Type components:Loader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type components:Loader}">
                    <Ellipse
                        Width="150"
                        Height="150"
                        RenderTransformOrigin="0.5 0.5"
                        Stroke="Black"
                        StrokeDashArray="260 90"
                        Visibility="{TemplateBinding IsLoading, 
                            Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Ellipse.RenderTransform>
                            <RotateTransform
                                x:Name="Rotate"
                                Angle="0" />
                        </Ellipse.RenderTransform>
                        <Ellipse.Triggers>
                            <EventTrigger
                                RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard
                                        RepeatBehavior="Forever">
                                        <DoubleAnimation 
                                            Storyboard.TargetName="Rotate"
                                            Storyboard.TargetProperty="Angle"
                                            From="0"
                                            To="360"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>

                </ControlTemplate>
            </Setter.Value>
        </Setter>    
    </Style>

    <Style
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type components:PlaceholderTextBox}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type components:PlaceholderTextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        MaxHeight="{TemplateBinding MaxHeight}"
                        MaxWidth="{TemplateBinding MaxWidth}"
                        Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Label
                                Padding="5 0"
                                Margin="0"
                                FontSize="{TemplateBinding FontSize}"
                                Visibility="{TemplateBinding IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"
                                IsHitTestVisible="False"
                                Foreground="Gray"
                                Panel.ZIndex="1">
                                <Label.Content>
                                    <TextBlock
                                        Text="{TemplateBinding Placeholder}" 
                                        Margin="0"/>
                                </Label.Content>
                            </Label>
                            <ScrollViewer
                                x:Name="PART_ContentHost" 
                                MaxHeight="{TemplateBinding MaxHeight}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>    
    </Style>

</ResourceDictionary>